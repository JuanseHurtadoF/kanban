import Head from "next/head";
import styles from "@styles/pages/Home.module.scss";
import { Layout } from "@components";
import { DragDropContext } from "react-beautiful-dnd";
import { useDispatch, useSelector } from "react-redux";
import { moveTaskLocal } from "state";
import { useReorderTaskMutation } from "state/api";

export default function Home() {
  const dispatch = useDispatch();
  const [reorderTask] = useReorderTaskMutation({});
  const { _id } = useSelector((state: any) => state.global.activeBoard);

  const onDragEnd = (result: any) => {
    const { destination, source, draggableId, type } = result;

    // If user drops the draggable outside of a droppable area
    if (!destination) return;

    // If user drops the draggable in the same place
    if (
      source.droppableId === destination.droppableId &&
      source.index === destination.index
    ) {
      return;
    }

    // If user drops the draggable in a different droppable area
    if (type === "cards") {
      reorderTasks(destination, source, draggableId);
    }
  };

  const reorderTasks = async (destination, source, draggableId) => {
    dispatch(
      moveTaskLocal({
        boardId: _id,
        columnId: source.droppableId,
        taskId: draggableId,
        destination,
        source,
      })
    );
    try {
      const result = await reorderTask({
        boardId: _id,
        source,
        destination,
      });
      if (result?.error?.status === 500) {
        dispatch(
          moveTaskLocal({
            boardId: _id,
            columnId: destination.droppableId,
            taskId: draggableId,
            destination: source,
            source: destination,
          })
        );
        alert(
          "Something went wrong while reordering tasks. Please try again later."
        );
      }
    } catch (error) {
      console.log("error: ", error);
    }
  };

  return (
    <>
      <Head>
        <title>Kanban - Task Management</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <DragDropContext onDragEnd={onDragEnd}>
          <Layout />
        </DragDropContext>
      </main>
    </>
  );
}
